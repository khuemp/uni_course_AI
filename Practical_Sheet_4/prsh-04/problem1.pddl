(define (problem robot1) (:domain robot)
(:objects
  robot1
  loc1 loc2 loc3 loc4 loc5 loc6 loc7
  key1 key2
  fuel1 fuel2 fuel3 fuel4 fuel5 fuel6 fuel7 fuel8 fuel9 fuel10
  fuel11 fuel12 fuel13
)
(:init
  (robot robot1)
  (location loc1)
  (location loc2)
  (location loc3)
  (location loc4)
  (location loc5)
  (location loc6)
  (location loc7)
  (key key1)
  (key key2)

  (connected loc1 loc2)
  (connected loc2 loc1)
  (connected loc2 loc3)
  (connected loc3 loc2)
  (connected loc3 loc4)
  (connected loc4 loc3)
  (connected loc4 loc5)
  (connected loc5 loc4)
  (connected loc5 loc6)
  (connected loc6 loc5)
  (connected loc6 loc7)
  (connected loc7 loc6)

  (at robot1 loc1)
  (at key1 loc3)
  (at key2 loc7)
  (free loc2)
  (free loc3)
  (locked loc4 key1)
  (free loc5)
  (free loc6)
  (free loc7)

  (fuel fuel1)
  (fuel fuel2)
  (fuel fuel3)
  (fuel fuel4)
  (fuel fuel5)
  (fuel fuel6)
  (fuel fuel7)
  (fuel fuel8)
  (fuel fuel9)
  (fuel fuel10)
  (fuel fuel11)
  (fuel fuel12)
  (fuel fuel13)
  (fuel-predecessor fuel1 fuel2)
  (fuel-predecessor fuel2 fuel3)
  (fuel-predecessor fuel3 fuel4)
  (fuel-predecessor fuel4 fuel5)
  (fuel-predecessor fuel5 fuel6)
  (fuel-predecessor fuel6 fuel7)
  (fuel-predecessor fuel7 fuel8)
  (fuel-predecessor fuel8 fuel9)
  (fuel-predecessor fuel9 fuel10)
  (fuel-predecessor fuel10 fuel11)
  (fuel-predecessor fuel11 fuel12)
  (fuel-predecessor fuel12 fuel13)
  (fuel-level robot1 fuel13)

)

(:goal (and (at key2 loc1))
)
)

